# Generated by Django 5.1.3 on 2024-11-10 13:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('stagepiano', 'Stage Piano'), ('workstation', 'Workstation'), ('synth', 'Synthesizer'), ('digital_piano', 'Digital Piano'), ('arranger', 'Arranjador'), ('controller', 'Controlador MIDI')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='KeyboardEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avaliation', models.TextField(blank=True, null=True)),
                ('sound_versatility', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia a variedade e qualidade dos sons disponíveis, além do piano.', null=True, verbose_name='Versatilidade sonora')),
                ('editing_features', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Refere-se às opções para editar, mixar e ajustar sons diretamente no teclado.', null=True, verbose_name='Funcionalidades de edição')),
                ('ease_of_use', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Mede o quão intuitivo e fácil é operar o teclado e navegar pelos menus.', null=True, verbose_name='Facilidade de uso')),
                ('connectivity', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia as opções de conexão MIDI, USB, Bluetooth, entradas e saídas de áudio.', null=True, verbose_name='Conectividade')),
                ('build_quality', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia a qualidade da construção do teclado, incluindo a qualidade de materiais e a estrutura.', null=True, verbose_name='Qualidade da construção')),
                ('weight_and_size', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia o peso e o tamanho do teclado, incluindo a altura e a largura.', null=True, verbose_name='Peso e tamanho')),
                ('key_feeling', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia a sensibilidade das teclas e o conforto ao tocar.', null=True, verbose_name='Sensibilidade das teclas')),
                ('auto_accompaniment_features', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia as opções de acompanhamento automático, como melodia e ritmo.', null=True, verbose_name='Funcionalidades de acompanhamento automático')),
                ('expandability', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Mede se o teclado permite adicionar mais sons, atualizações ou expansão de memória.', null=True, verbose_name='Expandibilidade')),
                ('price_and_value_for_money', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avalia o preço e o valor do teclado em relação ao seu custo.', null=True, verbose_name='Preço e valor para dinheiro')),
                ('overall_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('keyboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keyboards.keyboard')),
            ],
        ),
        migrations.CreateModel(
            name='KeyboardFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('has_it', models.BooleanField(default=False)),
                ('keyboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keyboards.keyboard')),
            ],
        ),
    ]
